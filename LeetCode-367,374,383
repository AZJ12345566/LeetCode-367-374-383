class Solution extends GuessGame{
/*
367.有效的完全平方数
给你一个正整数 num 。如果 num 是一个完全平方数，则返回 true ，否则返回 false 。
完全平方数 是一个可以写成某个整数的平方的整数。换句话说，它可以写成某个整数和自身的乘积。
不能使用任何内置的库函数，如  sqrt 
*/
  public boolean isPerfectSquare(int num) {
    int left = 0;
    int right = num;
    while(left <= right) {
      int mid = (right - left) / 2 + left;
      long square = mid * mid;
      if(square < num) {
        left = mid + 1;
      } else if(square > num) {
        right = mid - 1;
      } else {
        return true;
      }
    }
    return false;
  }
/*
374.猜数字大小
猜数字游戏的规则如下：
每轮游戏，我都会从 1 到 n 随机选择一个数字。 请你猜选出的是哪个数字。
如果你猜错了，我会告诉你，你猜测的数字比我选出的数字是大了还是小了。
你可以通过调用一个预先定义好的接口 int guess(int num) 来获取猜测结果，返回值一共有 3 种可能的情况（-1，1 或 0）：
-1：我选出的数字比你猜的数字小 pick < num
1：我选出的数字比你猜的数字大 pick > num
0：我选出的数字和你猜的数字一样。恭喜！你猜对了！pick == num
返回我选出的数字。
*/
  public int guessNumber(int n) {
    int left = 1;
    int right = n;
    while(left < right) {
      int mid = (right - left) / 2 + left;
      if(guess(mid) <= 0) {
        right = mid;
      } else {
        left = mid + 1;
      }
    }
    return left;
  }
/*
383.赎金信
给你两个字符串：ransomNote 和 magazine ，判断 ransomNote 能不能由 magazine 里面的字符构成。
如果可以，返回 true ；否则返回 false 。
magazine 中的每个字符只能在 ransomNote 中使用一次。
*/
  public boolean canConstruct(String ransomNote, String magazine) {
    if(ransomNote.length() > magazine.length()) {
      return false;
    }
    int[] arr = new int[26];
    for(char ch : magazine.toCharArray()) {
      arr[ch - 'a']++;
    }
    for(char ch : ransomNote.toCharArray()) {
      arr[ch - 'a']--;
      if(arr[ch - 'a'] < 0) {
        return false;
      }
    }
    return true;
  }
}
